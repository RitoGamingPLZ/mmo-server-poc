name: CI/CD - Rust Multi-Arch Build and Helm Deploy

on:
  push:
    branches: ["main"] # Change branch if needed
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Docker Buildx for multi-arch
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # Build and push multi-arch image
      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ secrets.REGISTRY_USERNAME }}/mmo-game-server:latest
            ${{ secrets.REGISTRY_USERNAME }}/mmo-game-server:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      # Install cloudflared
      - name: Install Cloudflared
        run: |
          curl -L https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb -o cloudflared.deb
          sudo dpkg -i cloudflared.deb

      # Export Service Auth token
      - name: Set Cloudflare Access Service Token
        run: |
          echo "CF_ACCESS_CLIENT_ID=${{ secrets.CF_ACCESS_CLIENT_ID }}" >> $GITHUB_ENV
          echo "CF_ACCESS_CLIENT_SECRET=${{ secrets.CF_ACCESS_CLIENT_SECRET }}" >> $GITHUB_ENV

      # Config ssh files
      - name: Config SSH for Cloudflare Access
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_CONFIG }}"" >> ~/.ssh/config

      - name: Add SSH Key
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      # Helm upgrade via SSH (cert-based)
      - name: SSH and run Helm upgrade
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.K3S_USER }}@ssh.alanchiu.net \
               helm upgrade mmo-game game-server \
                 --namespace=mmo \
                 --install \
                 --set image.repository=${{ secrets.REGISTRY_USERNAME }}/mmo-game-server \
                 --set image.tag=${{ github.sha }}"
